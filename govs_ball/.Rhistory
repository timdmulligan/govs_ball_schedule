instanceURL <- "https://na4.salesforce.com/"
apiVersion <- "27.0"  ## left this default - did not check
session <- rforcecom.login(username, password, instanceURL, apiVersion)
soqlQuery <- "SELECT SYB_Amount_USD__c FROM Opportunity_Split_Detail__c LIMIT 10"
rforcecom.query(session, soqlQuery)
d <- GET(paste("https://na4.salesforce.com/00O600000046Zt7?export=1&enc=UTF-8&xf=csv",sep=''))
df <- suppressWarnings(content(d))
df
d <- GET(paste("https://na4.salesforce.com/00O60000004kZjo?export=1&enc=UTF-8&xf=csv",sep=''))
df <- suppressWarnings(content(d))
df
d <- GET(paste("https://na4.salesforce.com/00O600000046Zt7?export=1&enc=UTF-8&xf=csv",sep=''))
df <- suppressWarnings(content(d))
df
s <- GET("https://na4.salesforce.com", query = list('un'='tmulliga@redhat.com','pw'='RHdatat3am'))
content(s)
d <- GET(paste("https://na4.salesforce.com/00O600000046aFI?export=1&enc=UTF-8&xf=csv",sep=''))
df <- suppressWarnings(content(d))
df
df <- unique(df)
df
emea_sf <- GET(paste("https://na4.salesforce.com/00O600000046aKh?export=1&enc=UTF-8&xf=csv",sep=''))
emea <- suppressWarnings(content(emea_sf))
emea <- unique(emea)
apac_sf <- GET(paste("https://na4.salesforce.com/00O600000046aFI?export=1&enc=UTF-8&xf=csv",sep=''))
apac <- suppressWarnings(content(apac_sf))
apac <- unique(apac)
addresses <- c("00O600000046aFI",
"00O600000046aKh",
"00O600000046aLf",
"00O600000046acR",
"00O60000004kdch",
"00O600000046cAF"
)
for (i in addresses){
GET(paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv"))
}
library(httr)
library(xml2)
library(readr)
for (i in addresses){
GET(paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv"))
}
for (i in addresses){
i <- GET(paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv"))
}
for (i in addresses){
x <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv")
}
for (i in addresses){
x <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
}
x
for (i in addresses){
i <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
h <- append(h,i)
}
h <- c()
for (i in addresses){
i <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
h <- append(h,i)
}
h
h <- c()
for (i in addresses){
i <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
[i] <- append(h,i)
}
i
h <- c()
for (i in addresses){
i <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
id[i] <- append(h,i)
}
id <- c()
for (i in addresses){
i <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
id[i] <- append(h,i)
}
id <- c()
for (i in addresses){
i <-paste("https://na4.salesforce.com/", i, "?export=1&enc=UTF-8&xf=csv", sep = '')
id[i] <- i
}
id
getSFDC <- function(adds){
listofdfs <- list()
for (i in 1:length(adds)){
url <-GET(paste("https://na4.salesforce.com/", adds[i], "?export=1&enc=UTF-8&xf=csv", sep = ''))
df <- head(unique(suppressWarnings(content(na_sf))[,3]),-5)
#df<- data.frame(json_data$resultSets[1, "rowSet"])
#names(df)<-unlist(json_data$resultSets[1,"headers"])
listofdfs[[i]] <- df
}
return(listofdfs)
}
getstats(adds = addresses)
getSFDC <- function(adds){
listofdfs <- list()
for (i in 1:length(adds)){
url <-GET(paste("https://na4.salesforce.com/", adds[i], "?export=1&enc=UTF-8&xf=csv", sep = ''))
df <- head(unique(suppressWarnings(content(na_sf))[,3]),-5)
#df<- data.frame(json_data$resultSets[1, "rowSet"])
#names(df)<-unlist(json_data$resultSets[1,"headers"])
listofdfs[[i]] <- df
}
return(listofdfs)
}
getSFDC(adds = addresses)
getSFDC <- function(adds){
listofdfs <- list()
for (i in 1:length(adds)){
url <-GET(paste("https://na4.salesforce.com/", adds[i], "?export=1&enc=UTF-8&xf=csv", sep = ''))
df <- head(unique(suppressWarnings(content(url))),-5)
#df<- data.frame(json_data$resultSets[1, "rowSet"])
#names(df)<-unlist(json_data$resultSets[1,"headers"])
listofdfs[[i]] <- df
}
return(listofdfs)
}
getSFDC(adds = addresses)
url <-GET(paste("https://na4.salesforce.com/", adds[i], "?export=1&enc=UTF-8&xf=csv", sep = ''))
df <- head(unique(suppressWarnings(content(url))),-5)
url <-GET(paste("https://na4.salesforce.com/", "00O600000046aFI", "?export=1&enc=UTF-8&xf=csv", sep = ''))
df <- head(unique(suppressWarnings(content(url))),-5)
url
top_28_sf <- GET(paste("https://na4.salesforce.com/00O600000046cAF?export=1&enc=UTF-8&xf=csv",sep=''))
top_28 <- head(unique(suppressWarnings(content(top_28_sf)[,3])),-5)
global_sf <- GET(paste("https://na4.salesforce.com/00O60000004kdch?export=1&enc=UTF-8&xf=csv",sep=''))
global <- head(unique(suppressWarnings(content(global_sf)[,4])),-5)
top_28_sf <- GET(paste("https://na4.salesforce.com/00O600000046cAF?export=1&enc=UTF-8&xf=csv",sep=''))
top_28 <- head(unique(suppressWarnings(content(top_28_sf))),-5)
getSFDC <- function(adds){
listofdfs <- list()
s <- GET("https://na4.salesforce.com", query = list('un'='tmulliga@redhat.com','pw'='RHdatat3am'))
for (i in 1:length(adds)){
url <-GET(paste("https://na4.salesforce.com/", adds[i], "?export=1&enc=UTF-8&xf=csv", sep = ''))
df <- head(unique(suppressWarnings(content(url))),-5)
#df<- data.frame(json_data$resultSets[1, "rowSet"])
#names(df)<-unlist(json_data$resultSets[1,"headers"])
listofdfs[[i]] <- df
}
return(listofdfs)
}
getSFDC(adds = addresses)
sfdc_tables <- getSFDC(adds = addresses)
unlist(sfdc_tables)
sfdc_tables[1]
sfdc_tables[1][,1]
sfdc_tables[1][,'Account ID']
type(sfdc_tables[1])
dtype(sfdc_tables[1])
types(sfdc_tables[1])
??type
dtypes(sfdc_tables[1])
typeof(sfdc_tables[1])
typeof(data.frame(sfdc_tables[1])
typeof(data.frame(sfdc_tables[1]))
df <-sfdc_tables[1]
df <-sfdc_tables[[1]]
df <-sfdc_tables[[1]][,3]
library(rsconnect)
deployapp()
deployApp()
deployApp("govs_ball_schedule/govs_ball/")
shiny::runApp('govs_ball_schedule/govs_ball')
con = dbConnect(SQLite(), dbname="../pitchfork-data-shiny.db")
runApp('govs_ball_schedule/govs_ball')
deployApp("govs_ball_schedule/govs_ball/", appName = "govs_ball")
runApp('govs_ball_schedule/govs_ball')
runApp('govs_ball_schedule/govs_ball')
runApp()
runApp('govs_ball_schedule/govs_ball')
deployApp("govs_ball_schedule/govs_ball/", appName = "govs_ball")
runApp('govs_ball_schedule/govs_ball')
runApp('govs_ball_schedule/govs_ball')
deployApp("govs_ball_schedule/govs_ball/", appName = "govs_ball")
shiny::runApp('govs_ball_schedule/govs_ball')
con = dbConnect(SQLite(), dbname="pitchfork-data-shiny.db")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
con = dbConnect(SQLite(), dbname="pitchfork-data-shiny.db")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
con = dbConnect(SQLite(), dbname="pitchfork-data-shiny.db")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
con = dbConnect(SQLite(), dbname="pitchfork-data-shiny.db")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enrichedL")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE critical IS NOT NULL")
runApp('govs_ball_schedule/govs_ball')
,getwd()
getwd()
setwd("~/govs_ball_schedule")
setwd("~/govs_ball_schedule/govs_ball/")
con = dbConnect(SQLite(), dbname="pitchfork-data-shiny.db")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE followers > 1000")
gbe <- dbGetQuery(con, "SELECT artist, popularity, followers, pf_mean AS critical,
genre, day, festival
FROM fest_data_enriched
WHERE pf_mean IS NOT NULL")
cor(gbe$critical, gbe$followers)
cor(gbe$followers, gbe$critical)
rcorr(gbe$followers, gbe$critical)
library(Hmisc)
rcorr(gbe$followers, gbe$critical)
rcorr(gbe$followers, gbe$critical, type="pearson")
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
text = data$artist,
marker = list(size = 10)
)
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Critical Score'),
paper_bgcolor='rgba(0,0,0,0)',
plot_bgcolor='rgba(0,0,0,0)'
)
p
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10)
)
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Critical Score'),
paper_bgcolor='rgba(0,0,0,0)',
plot_bgcolor='rgba(0,0,0,0)'
)
p
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Critical Score'),
paper_bgcolor='rgba(0,0,0,0)',
plot_bgcolor='rgba(0,0,0,0)'
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Critical Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(0,0,0,0)'
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Critical Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)'
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Critical Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't real care <br> about popularity"
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't real care <br> about popularity",
margin = list(t = 100)
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't really care <br> about popularity",
margin = list(t = 90)
)
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't really care <br> about popularity",
margin = list(t = 90)
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't really care <br> about popularity",
margin = list(t = 75)
)
p
t <- list(
family = "overpass",
size = 14)
p <- plot_ly(x = gbe$critical,
y = gbe$followers,
mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't really care <br> about popularity",
margin = list(t = 75),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork doesn't really care <br> how popular you are",
margin = list(t = 75),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br> how popular you are",
margin = list(t = 75),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br>
how popular you are <br>
(n = 135, r = -0.094)",
margin = list(t = 75),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br>
how popular you are <br>
(n = 135, r = -0.094)",
margin = list(t = 90),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br>
how popular you are <br>
(n = 135, r = -0.094)",
margin = list(t = 95),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br>
how popular you are <br>
(n = 135, r = -0.094)",
margin = list(t = 110),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br>
how popular you are <br>
(n = 135, r = -0.094)",
margin = list(t = 120),
font = t
)
p
p <- layout(p,
yaxis = list(title = 'Followers on Spotify'),
xaxis = list(title = 'Average Review Score'),
paper_bgcolor='rgba(241,241,241,241)',
plot_bgcolor='rgba(241,241,241,241)',
title = "Pitchfork.com doesn't really care <br>
how popular you are <br>
(n = 135, r = -0.094)",
margin = list(t = 120, l = 80, r = 80, b = 80),
font = t
)
p
runApp()
